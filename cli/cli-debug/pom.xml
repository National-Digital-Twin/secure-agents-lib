<?xml version="1.0" encoding="UTF-8"?>
<!--
 SPDX-License-Identifier: Apache-2.0
 Originally developed by Telicent Ltd.; subsequently adapted, enhanced, and maintained by the National Digital Twin Programme.

    Copyright (c) Telicent Ltd.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.


    Modifications made by the National Digital Twin Programme (NDTP)
    Â© Crown Copyright 2025. This work has been developed by the National Digital Twin Programme
    and is legally attributed to the Department for Business and Trade (UK) as the governing entity.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>cli</artifactId>
        <groupId>uk.gov.dbt.ndtp.secure-agents</groupId>
        <version>0.26.7</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>cli-debug</artifactId>
    <name>IANode Secure Agents - CLI - Debug Tools</name>

    <dependencies>
        <dependency>
            <groupId>uk.gov.dbt.ndtp.secure-agents</groupId>
            <artifactId>cli-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>io.opentelemetry.javaagent</groupId>
            <artifactId>opentelemetry-javaagent</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-arq</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <dependency>
            <groupId>uk.gov.dbt.ndtp.secure-agents</groupId>
            <artifactId>event-sources-lib</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.rvesse</groupId>
            <artifactId>airline</artifactId>
        </dependency>

        <dependency>
            <groupId>uk.gov.dbt.ndtp.secure-agents</groupId>
            <artifactId>jaxrs-base-server</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-rdfpatch</artifactId>
        </dependency>

        <dependency>
            <groupId>uk.gov.dbt.ndtp.secure-agents</groupId>
            <artifactId>event-source-kafka</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>uk.gov.dbt.ndtp.secure-agents</groupId>
            <artifactId>projectors-lib</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>uk.gov.dbt.ndtp.secure-agents</groupId>
            <artifactId>live-reporter</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-core</artifactId>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>uk.gov.dbt.ndtp.secure-agents</groupId>
            <artifactId>cli-api</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>uk.gov.dbt.ndtp.secure-agents</groupId>
            <artifactId>event-source-kafka</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>uk.gov.dbt.ndtp.secure-agents</groupId>
            <artifactId>jaxrs-base-server</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>uk.gov.dbt.ndtp.secure-agents</groupId>
            <artifactId>event-source-file</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>uk.gov.dbt.ndtp.secure-agents</groupId>
            <artifactId>projector-driver</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>uk.gov.dbt.ndtp.secure-agents</groupId>
            <artifactId>event-source-kafka</artifactId>
            <version>${project.version}</version>
            <classifier>certs-helper</classifier>
            <scope>test</scope>
            <type>zip</type>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>kafka</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-compress</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${plugin.surefire}</version>
                <configuration>
                    <includes>
                        <include>**/Test*.java</include>
                    </includes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${plugin.dependency}</version>
                <executions>
                    <execution>
                        <id>unpack-certs-helper</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}</outputDirectory>
                            <includeTypes>zip</includeTypes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <activation>
		<activeByDefault>true</activeByDefault>
		<os>
		    <family>!Windows</family>
		</os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${plugin.jacoco}</version>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${plugin.surefire}</version>
                        <configuration>
                            <includes>
                                <include>**/Test*.java</include>
                                <include>**/DockerTest*.java</include>
                            </includes>
                            <forkCount>${test.maxForks}</forkCount>
                            <reuseForks>true</reuseForks>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>encrypted-kafka-tests</id>
            <activation>
                <os>
                    <family>!Windows</family>
                </os>
            </activation>

            <build>
                <plugins>
                    <!-- Only regenerate SSL certificates on POSIX OSes since we do it via a Bash script -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${plugin.exec}</version>
                        <executions>
                            <execution>
                                <id>generate-test-ssl-certs</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>process-test-resources</phase>
                                <configuration>
                                    <executable>${project.basedir}/test-certs/generateCerts.sh</executable>
                                    <skip>${skipTests}</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
